For updated documentation, please access our Google Docs: https://docs.google.com/document/d/1CnUb_dKuJ1-FlLyJ-0XI2GXCQN-dClqdzB5hfDZUssw
You can either send email (moonflowercarnivore@gmail.com) to us or message to our FaceBook group (https://www.facebook.com/MoonflowerCarnivore/) for any inquiry.

The following documentation may not be updated, please always refer to the online Google Docs version.

========================================================

Basic usage of Shuriken particle system
All effects are contained in the “Prefabs” folder. The root “Prefabs” contains the “swarm” version of the effects. “Single Projectile” effects are in the sub-folder. To view any of these effects, drag any prefab from the Project window to Hierarchy window and the effect will play itself when it is selected in the Hierarchy window. Before you press the “Play” button, the displayed effect is under “Simulation” (or “Preview”) mode.

You can check the little “Particle Effect” module at the bottom-right corner in the “Scene” window to manipulate the simulation, however you change its values will not affect values of the actual effect. Simulation mode is less accurate in terms of particle emission and animation than in the “Play” mode, this will become more obvious when the effect has complicated SubEmitter setup like this asset. You can modify the values of the particle effect loaded in the Hierarchy and press “Apply” to overwrite the one in the Project folder when you are satisfied, otherwise you should rename the effect prefab and drag it back to the Project folder for version backup.

Normally only the selected prefab(s) will simulate, Shuriken particle system will check if the selected prefab’s top parent and its other child prefabs also contain the particle system component. If so the whole effect tree will be simulated altogether without needing to re-select all effect prefabs.

During the Play mode, you can still drag the effect prefab from Project window to Hierarchy window and all effects will play simultaneously. If you have changed any values of the particle effect during Play mode, it will not be applied after you stop playing it unless you drag the modified effect back to the Project window.

This package includes 2 scenes (only 1 in 5.2 package) for testing purpose. The “default_scene” is for the “swarm” effects. You drag a swarm effect prefab from project folder to the “effect_container” prefab of hierarchy window because it defines the proper central position (the chest) of the dummy to be hit by the beams and trigger the collision effect. Under no circumstances should you change the position or rotation of the root effect prefab because this will cause confusion during implementation of the particle effect. If you really need to change the initial position or rotation of the particle effect, do that to the “effect container” instead so the root effect prefab is unaffected.
OK, by knowing the consequence you still want to change the initial position of the effect prefab, remember that changing the position of the (slave) subemitters will have no effect at all. The change of position only works on particle prefab when it is not any subemitter to another emitter. So only transposing the “particle master” prefab will show the difference.

Unity 5.3 package also includes a “single_projectile_scene” for effects in the “single projectiles” folder. You drag the combined effect (without “collision” or “projectile” suffix) to the “effect_container_radius” prefab and play the scene to examine the “single” effect. (Jump to “known issues” section for reason that it is not in the 5.2 package.)

Ending or replaying an effect
Deactivating the effect prefab while its particles are still being animated will kill them instantly. To end the looping effect smoothly, you can deactivate the “Emission” module of the “particle master” prefab because all other particle emitters (slave) of any “swarm” effect are dependent on the emission of this “master” prefab. (Doing so in Simulation mode will kill all particles as well.) The reason that the master emitter is not placed in the real top prefab (which contains an empty particle system component for triggering simulation) is because there is situation that the transform-rotation of the master prefab should not be succeeded by the slave prefabs. Some slave emitters are placed as child prefab to the master prefab when the rotation succession is desirable. 

To replay a one-off particle effect (e.g. Revive and all “collision” prefabs in the single projectile folder) during Play mode, you simply deactivate and activate it again, or drag the same effect from Project window to Hierarchy window again. During simulation, you simply click “stop” and “simulate” in the Particle Effect module in the Scene window.

Always on top glow
All large glow and ray particle prefabs are put under the “TransparentFX” instead of “Default” layer. Refer to the default scene setup, you place an extra “FX camera” under the “main camera” prefab so the former always follows the latter. FX camera is only used to render objects of TransparentFX and this layer is removed from the culling mask of the main camera. Because the FX camera is given higher “depth” than the main camera, objects of the TransparentFX layer will always appear before those rendered by the main camera.

This practice prevents the glows from intersecting with other objects, the ground and the target particularly. The drawback is that anything rendered by the FX camera will cover absolutely everything of lower camera depth regardless of distance. You can set lower clipping plane of the FX camera or simply choose not to set up an FX camera if you do not care of the intersection. The sorting fudge and sorting layer of all particle prefabs are given appropriate values so they should appear in the correct order.

Customizations
Lifetime of beams (swarm only): Change the “start lifetime” value of “particle master” prefab. And then change the “duration” of all “particle slave birth (...)” prefabs with the exact same value as particle master’s start lifetime. This is because the gradient of “start color” and emission rate graph of all “particle slave birth” depend on the duration value. If the 2 values do not match, the trail will not appear or fade in/out at the right timing.

Traveling speed and range of spiral motion (swarm only): In the “particle master” prefab, check the “velocity over lifetime” module, the values are given the “ranges between curves”. You do not need to modify the curves but their range values. Y dictates the traveling speed and X/Z dictates the range of spiral. Whenever you have done entering any value in the graph, press enter to confirm otherwise the value may not be registered.

One tip when editing the range of multiple axes of the particle graph is that you can select multiple curves of different axes or just press ALT+A to select all visible axes and then type the range value so the new value will be applied to all selected axes. This trick only works when all selected axes share the same range value before selection (which is mostly true for X/Z velocity over lifetime curves). When the selected curves have different range value, the range value will disappear, preventing you from modifying it.

Launching distance (swarm only) can be both affected by start lifetime and velocity over lifetime of Y-axis in “particle master”. Increasing either will increase the launching distance as well. You can modify either or both to fit your scene.

For lifetime of beams = 1 second, the beams will collide with the target at about 0.68 second. The default setting reserves about 32% of the lifetime in case the beams bounce at collision. For beams which do not bounce, we have set “lifeloss” in the “collision” module to 1 so they die instantly at contact with collider.

Launching angle (swarm only): Most swarm effects are given certain tilt to the “master prefab” or “master rotation” of “Shuriken”. Usually you only need to adjust the X rotation of transform. We do not rotate the parent prefab because there are certain cases that we do not want the child prefabs to be rotated such as the collider plane of “Meteorite” and “Missile” which is supposed to be constantly horizontal. If their collision plane are rotated, their collision on the supposed ground will be rotated as well which just looks silly.

Length of trail: Modify the “start lifetime” of the trail prefab. If it is for modern desktop or console platforms, we affectionately recommend increasing the smoke trail of meteorite and missile to longer than 2 seconds (0.4~0.5 second by default) for more dramatic effect.

Density of trail: Modify the emission rate of the trail prefab. The default values are just right and you should not worry if the trail disperses when the projectile travels too fast, because the trail emission is calculated on “distance” instead of “time”, that means more particles are emitted to fill in the gaps when the emitter travels faster. “Distance” is not used when the emitter is stationary which is why this option is usually overlooked by artists. There are 2 situations where you do need to adjust the emission rate:
If you have changed the trail start size, adjust the emission rate conversely.
The flame trail prefab of the fire effect applies “inherit velocity”. This option is applied to give additional force for the flame particles to move along the initial direction of the leading emitter. If you set the leading emitter travels too fast, you can increase the emission rate of the flame trail to reduce the gap. But the interpolation of Shuriken particle system for evening the gaps between the initial positions of particles does not take inherit velocity into account, that means if you want the flame trail to join absolutely coherently at high speed, you need to disable the inherit velocity module besides increasing flame particles emission rate.

Collision with scene objects: All swarm effects except Shuriken (swarm) are defaulted to collide with the plane collider of particle system itself because it is cheaper and guarantees no beam particles sneak through the collider (on the other hand, there is no way to allow the particles to pass through it while still sending collision message out). If you want the beams collide with other colliders, in the “collision” module of “particle master”, you change the “Plane” to “World” mode, setup the colliders in a specific layer which you intend to be interacting with the particle effect by checking or unchecking the layers in the “collides with” parameter. If you want other particle emitter (e.g. the sub smoke trails in the Missile swarm effect) collides too, you add/enable the “collision” module of “particle slave collision birth master”.

Angle of shadow of smoke trail: adjust the “start rotation” of the trail prefab. Zero degree means the lighter side is facing upward and shadow side downward. For some randomness of the shadow angle, change the “constant” mode of start rotation to “random between constants” and give the initial angle ±10 degree range. e.g. if the initial angle is 0 degree, change it to -10 and +10 degrees; 40 and 60 if the initial is 50.

Light receiving particles
If you want the alpha blended particles to receive lights in your scene instead of being completely unlit, you change the particle material shader to “VertexLit Blended” and adjust the “Emissive Color”. The darker the emissive color is, the more light the material receives. VertexLit Blended does not receive shadow or cast shadow, unless you write or buy another shader from Asset Store. Obviously the calculation of color blending from the lightings requires additional processing power so it is not quite recommended on mobile platforms.

If you want the color of the particle effect coherent to the lighting of the scene, the more performant but slightly tedious approach is to make a separate batch of effects and manually change the colors in the particle system to match the specific scene lighting.

Additive is meant to be emissive so there is no VertexLit version of it, although in the dynamically optical sense, the glow of smaller emissive object (e.g. flame) should appear dimmer when the surrounding environment is brighter, and vice versa.

Performance and optimization
Unity 5.3 no longer batches draw calls of particle systems which use the exact same material, instead the engine uses multi-threading to enhance the processing speed which could mean more power is consumed. On mobile platforms this can be more sensitive as the device might heat up and lose battery power quickly. Nonetheless particle count and overdraw (2 or more objects overlap before the camera) are the biggest culprits.

We still recommend creating particle texture sheet/atlas by grouping frequently used textures of the same shader into 1 big material and then enable “Texture Sheet Animation” in the particle system to select the required texture in order to reduce the amount of texture read-write. So literally you would have at least 2 particle texture sheets, one additive and one alpha blended. You can include the less used texture into the sheet if it still has room for it. Because different games use different set of particle textures, the particle texture sheet sadly has to be done on your side for maximum optimization of the specific game.

Also you can produce another set of “power saving” particle effects by reducing the emission rate and/or lifetime of all particle effects. Exactly how much should be reduced really depends on how you value aesthetics. There is hardly a right answer. Some might just remove the seemingly minor SubEmitters instead of reducing other emitters’ emission rate or lifetime. The laziest and safest approach would be reducing all lifetime values by half, but remember that the “duration” of any trail SubEmitter should agree with the lifetime of the leading emitter, otherwise the color cycle of the trail will not be properly played.

Limitations
This is not homing missile in any sense. It does not take the attacker's position into account, although you can adjust the "launching distance" in the particle system easily.
If the target moves, the already launched beams will miss the target.
The head of the beam/missile must be billboard instead of mesh unless it is omni-directional. Auto-reoriented mesh particle like stretched billboard is not yet supported by Shuriken particle system. 

Known issues
Due to the inherent inaccuracy of Unity’s particle graph, the greater the X/Z velocity range of “particle master” is, the more likely the beams will “miss” the target. We can do nothing to fix that as we suspect it is due to the lower priority of its calculation in Unity’s engine structure. But the mild inaccuracy is part of the charms of a swarm attack effect. If this bothers you hugely, you can (a) reduce the range of X/Z velocity, (b) use world mode collision instead of plane mode and setup colliders properly or (c) use the “single projectile” version and either control its path directly or add your own auto guidance script (available by other publishers on the Asset Store for purchase).
Originally both swarm and single Missile heads use offset pivot which is a new particle system feature of Unity 5.3. Sadly the stretched billboard particle does not align correctly at most angles, leading the head missile particle strays away from its jet and smoke trails. To compensate that we include the Unity 5.2 version in the 5.3 package which does not use offset pivot. The bug has been reported to Unity and is acknowledged as “reproducible” without a firm date of delivery of the fix. The reason that offset pivot is used is because the 5.2 version requires delaying the appearances of jet and smoke trails via “color over lifetime” so they come out from the tail of the missile instead of the center. The problem is that this will not look right when the lifetime of the smoke trail is increased as there will be visible gap between the jet and smoke trails. In the offset pivot (5.3) version, color over lifetime of both trails is set to appear near the beginning of their life cycle so practically their lifetimes can be increased freely without readjusting the color over lifetime of the smoke trail.
Ice cube particles upon collision should enable “separate axis” in “rotation over lifetime” and be given proper rotation range of all axes, another Unity 5.3 new feature, but an editor-shutdown bug prevents activation of this option if the particle system is a subemitter to another emitter. This bug has been reported to and acknowledged by Unity but not fixed yet. The ice effect is by no mean broken without this option enabled, the separate axis rotation of ice cube particles just adds more dynamic and realism to the whole effect.
For “single projectile” effects, another new particle system feature of Unity 5.3 allows triggering “collision” effect by the subemitter collision setting in “projectile” effect without additional script. In the order versions, this can only be done reliably via scripting. For this reason, we have included both the “projectile” and “collision” prefabs separately so you can even mix and match by yourself. For Unity 5.0~5.2 customers, please download this asset once again when you switch to Unity 5.3.1 onward (you should not need to pay again with the same account which has purchased this asset), because the combined “single projectile” prefabs are removed from the 5.2 package to avoid confusion.



If you like this asset, please rate it or leave your comment in our Asset Store item page. You may also be interested in other assets created by us, so check out our publisher page on Asset Store. Some assets are even offered for free, so don’t delay.